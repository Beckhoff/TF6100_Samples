<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.6">
  <POU Name="PRG_ADSReadDeviceInfoReq" Id="{0dff288d-5902-4aef-b556-245196411c91}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_ADSReadDeviceInfoReq
VAR
	fbUA_Connect			: UA_Connect;
	SessionConnectInfo		: ST_UASessionConnectInfo;
	sOpcUA_URL				: STRING(MAX_STRING_LENGTH);
	nConnectionHdl			: DWORD;

	fbUA_GetNamespaceIndex 	: UA_GetNamespaceIndex;
	nNamespaceIndex			: UINT;

	fbUA_NodeReleaseHandle	: UA_NodeReleaseHandle;
	
	fbUA_MethodCall_ADSReadDeviceInfo	: UA_MethodCall_ADSReadDeviceInfoReq;
	sDeviceName			: STRING(19);	(* DeviceName *)
	nVersion			: SINT;			(* Version *)
	nRevision			: SINT;			(* Revision *)
	nBuild				: INT;			(* Build *)
	
	fbUA_Disconnect		: UA_Disconnect;
		
	bTest		: BOOL := TRUE;
	bDone		: BOOL;
	bBusy		: BOOL;
	bError		: BOOL;
	nErrorID	: DWORD;
	iState		: INT;	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
CASE iState OF
0:	(* idle *)
	IF bTest THEN
		bTest	:= FALSE;
		bError	:= FALSE;
		nErrorID	:= 0;

		(* Parameterize *)
		sOpcUA_URL						:= 'opc.tcp://localhost:4840';	(* OpcUA Url of the device with ip address *)

		SessionConnectInfo.tConnectTimeout 		:= T#1S;
		SessionConnectInfo.tSessionTimeout 		:= T#1S;
		SessionConnectInfo.sApplicationName		:= '';
//		SessionConnectInfo.sApplicationUri 		:= '';
		SessionConnectInfo.eSecurityMode 		:= eUASecurityMsgMode_None;
		SessionConnectInfo.eSecurityPolicyUri 	:= eUASecurityPolicy_None;
		SessionConnectInfo.eTransportProfileUri := eUATransportProfileUri_UATcp;

		iState	:= iState + 1;	(* open ua session *)
	END_IF

1:	(* open UA session *)
	fbUA_Connect(
		Execute				:= TRUE,
		ServerURL			:= sOpcUA_URL,
		SessionConnectInfo	:= SessionConnectInfo,
		Timeout				:= T#5S,
		ConnectionHdl		=> nConnectionHdl
	);

	IF NOT fbUA_Connect.Busy THEN
		fbUA_Connect(Execute := FALSE);

		IF NOT fbUA_Connect.Error THEN
			(* session open *)
			iState := iState + 1;	(* get namespace index *)
		ELSE
			bError			:= TRUE;
			nErrorID		:= fbUA_Connect.ErrorID;
			nConnectionHdl	:= 0;
			iState 			:= 0; (* idle *)
		END_IF
	END_IF


2:	(* GetNS Index *)
	fbUA_GetNamespaceIndex(
		Execute			:= TRUE,
		ConnectionHdl	:= nConnectionHdl,
		NamespaceUri	:= 'ADSAMS',
		NamespaceIndex	=> nNamespaceIndex
	);

	IF NOT fbUA_GetNamespaceIndex.Busy THEN
		fbUA_GetNamespaceIndex(Execute := FALSE);

		IF NOT fbUA_GetNamespaceIndex.Error THEN
			(* session closed *)
			iState 		:= iState + 1; (* method *)
		ELSE
			bError		:= TRUE;
			nErrorID	:= fbUA_GetNamespaceIndex.ErrorID;
			iState 		:= 4; (* close session *)
		END_IF
	END_IF

3:	(*  Method  *)
	fbUA_MethodCall_ADSReadDeviceInfo(
		bExecute		:= TRUE,
		nConnectionHdl	:= nConnectionHdl,
		nNamespaceIndex	:= nNamespaceIndex,
		sNetID			:= '127.0.0.1.1.1',
		nPort			:= 10000,
		sDeviceName		=> sDeviceName,		(* ADS state *)
		nVersion		=> nVersion,			(* Device state *)
		nRevision		=> nRevision,
		nBuild			=> nBuild
		);


	IF NOT fbUA_MethodCall_ADSReadDeviceInfo.bBusy THEN
		fbUA_MethodCall_ADSReadDeviceInfo(	bExecute 	:= FALSE, 
											sDeviceName	=> sDeviceName,		(* ADS state *)
											nVersion	=> nVersion,			(* Device state *)
											nRevision	=> nRevision,
											nBuild		=> nBuild);
		IF NOT fbUA_MethodCall_ADSReadDeviceInfo.bError THEN
			(* session closed *)
			iState 		:= iState + 1; (* close session *)
		ELSE
			bError		:= TRUE;
			nErrorID	:= fbUA_MethodCall_ADSReadDeviceInfo.nErrorID;
			iState 		:= 4; (* close session *)
		END_IF
	END_IF


4:	(* close session *)
	fbUA_Disconnect(
		Execute			:= TRUE,
		ConnectionHdl	:= nConnectionHdl
	);

	IF NOT fbUA_Disconnect.Busy THEN
		fbUA_Disconnect(Execute := FALSE);
		bBusy := FALSE;
		IF NOT fbUA_Disconnect.Error THEN
			(* session closed *)
			iState 		:= 0; (* idle *)
			IF NOT bError THEN 
				bDone 	:= TRUE;
			END_IF
		ELSE
			bError			:= TRUE;
			nErrorID		:= fbUA_Disconnect.ErrorID;
			iState 			:= 0; (* idle *)
			nConnectionHdl	:= 0;
		END_IF
	END_IF
END_CASE
]]></ST>
    </Implementation>
    <LineIds Name="PRG_ADSReadDeviceInfoReq">
      <LineId Id="3" Count="120" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>