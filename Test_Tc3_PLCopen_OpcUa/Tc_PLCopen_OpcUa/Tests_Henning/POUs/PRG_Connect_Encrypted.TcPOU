<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.24">
  <POU Name="PRG_Connect_Encrypted" Id="{58dc0802-8ce1-4598-9ec3-0f66540e2df3}">
    <Declaration><![CDATA[PROGRAM PRG_Connect_Encrypted
VAR
	fbUA_Connect			: UA_Connect;
	SessionConnectInfo		: ST_UASessionConnectInfo;
	sOpcUA_URL				: STRING(MAX_STRING_LENGTH);
	nConnectionHdl			: DWORD;

	fbUA_GetNamespaceIndex 	: UA_GetNamespaceIndex;
	nNamespaceIndex			: UINT := -1;

	fbUA_NodeGetHandle		: UA_NodeGetHandle;
	NodeID					: ST_UANodeID;
	nNodeHdl				: DWORD;

	fbUA_Read				: UA_Read;
	stIndexRange			: ARRAY [1..nMaxIndexRange] OF ST_UAIndexRange;
	nIndexRangeCount		: UINT;
	stNodeAddInfo			: ST_UANodeAdditionalInfo;
	nReadData				: DINT; 		// change the data type according to the variable type to be read
	bReadData				: DINT; 
	sReadData				: STRING(4);
	cbData_R				: UDINT;
	
	fbUA_NodeReleaseHandle	: UA_NodeReleaseHandle;

	fbUA_Disconnect		: UA_Disconnect;

	iState		: INT;
	bTest		: BOOL:= TRUE;
	bDone		: BOOL;
	bBusy		: BOOL;
	bError		: BOOL;
	nErrorID	: DWORD;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Connect Encryped with the demoserver
//Certs of demoserver (due to serverconfig.xml) are located: C:\ProgramData\UnifiedAutomation\UaSdkCppBundleSource/pkiserver/
//just retrieves nNamespaceIndex from http://opcfoundation.org/UA/ - should be 0 (init of nNamespaceIndex := -1)

CASE iState OF
0:	(* idle *)
	IF bTest THEN
		bTest		:= FALSE;
		bDone 		:= FALSE; 
		bError		:= FALSE;
		nErrorID	:= 0;
		nNamespaceIndex := -1;
		
		(* Parameterize *)
		sOpcUA_URL						:= 'opc.tcp://localhost:48010';	(* OpcUA Url of the device with ip address *)

		SessionConnectInfo.tConnectTimeout 		:= T#1M;
		SessionConnectInfo.tSessionTimeout 		:= T#1M;
		SessionConnectInfo.sApplicationName		:= '';
		SessionConnectInfo.sApplicationUri 		:= 'HENNINGM-NB';
		SessionConnectInfo.eSecurityMode 		:= eUASecurityMsgMode_Sign_Encrypt;
		SessionConnectInfo.eSecurityPolicyUri 	:= eUASecurityPolicy_Basic128Rsa15;
		SessionConnectInfo.eTransportProfileUri := eUATransportProfileUri_UATcp;

(*		nIndexRange[1].nStartIndex := 0;
		nIndexRange[1].nEndIndex := 1;
		nIndexRange[1].bRangeAccess := TRUE; *)
		stNodeAddInfo.nIndexRangeCount := nIndexRangeCount;
		stNodeAddInfo.stIndexRange := stIndexRange;
		iState	:= iState + 1;
	END_IF

1:	(* open UA session *)
	fbUA_Connect(
		Execute				:= TRUE,
		ServerURL			:= sOpcUA_URL,
		SessionConnectInfo	:= SessionConnectInfo,
		Timeout				:= T#5S,
		ConnectionHdl		=> nConnectionHdl
	);

	IF NOT fbUA_Connect.Busy THEN
		fbUA_Connect(Execute := FALSE);

		IF NOT fbUA_Connect.Error THEN
			(* session open *)
			iState := iState + 1;
		ELSE
			bError			:= TRUE;
			nErrorID		:= fbUA_Connect.ErrorID;
			nConnectionHdl	:= 0;
			iState 			:= 0; (* idle *)
		END_IF
	END_IF


2:	(* GetNS Index *)
	fbUA_GetNamespaceIndex(
		Execute			:= TRUE,
		ConnectionHdl	:= nConnectionHdl,
		//NamespaceUri	:= 'PLC1', 
		NamespaceUri	:= 'http://opcfoundation.org/UA/',
		NamespaceIndex	=> nNamespaceIndex
	);

	IF NOT fbUA_GetNamespaceIndex.Busy THEN
		fbUA_GetNamespaceIndex(Execute := FALSE);
		IF NOT fbUA_GetNamespaceIndex.Error THEN
			(* session closed *)
			iState 		:= iState + 6; (* idle *)
			bDone := TRUE; 
		ELSE
			bError		:= TRUE;
			nErrorID	:= fbUA_GetNamespaceIndex.ErrorID;
			iState 		:= 6; (* idle *)
		END_IF
	END_IF


6:	(* close session *)
	fbUA_Disconnect(
		Execute			:= TRUE,
		ConnectionHdl	:= nConnectionHdl
	);

	IF NOT fbUA_Disconnect.Busy THEN
		fbUA_Disconnect(Execute := FALSE);
		bBusy := FALSE;
		IF NOT fbUA_Disconnect.Error THEN
			(* session closed *)
			iState 		:= 0; (* idle *)
			IF NOT bError THEN 
				bDone 	:= TRUE;
			END_IF
		ELSE
			bError			:= TRUE;
			nErrorID		:= fbUA_Disconnect.ErrorID;
			iState 			:= 0; (* idle *)
			nConnectionHdl	:= 0;
		END_IF
	END_IF
END_CASE
]]></ST>
    </Implementation>
    <ObjectProperties />
  </POU>
</TcPlcObject>